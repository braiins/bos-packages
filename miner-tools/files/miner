#!/bin/sh

# Copyright (C) 2023  Braiins Systems s.r.o.
#
# This file is part of Braiins Open-Source Initiative (BOSI).
#
# BOSI is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#
# Please, keep in mind that we may also license BOSI or any part thereof
# under a proprietary license. For more information on the terms and conditions
# of such proprietary license or if you have any other questions, please
# contact us at opensource@braiins.com.

# Immediately exit when error occurs
set -e

usage() {
	echo "usage: miner [-h] {factory_reset,ip_report,fault_light} ..."
	echo
	echo "positional arguments:"
	echo "  {factory_reset,ip_report,fault_light}"
	echo "    factory_reset       reboot and initiate factory reset"
	echo "    ip_report           broadcast IP and MAC address of device"
	echo "    fault_light         turn on or off miner's fault LED"
	echo
	echo "optional arguments:"
	echo "  -h, --help            show this help message and exit"
}

factory_reset() {
	exec bos factory_reset "$@"
}

ip_report() {
	exec bos ip_report "$@"
}

fault_light() {
	if [ $# -ne 1 -o \( "$1" != 'on' -a "$1" != 'off' \) ]; then
		echo "command 'fault_light' takes only one argument [on|off]" >&2
		exit 1
	fi

	# Send 'on' or 'off' to bosminer_monitor
	echo $1 | nc 127.0.0.1 4029 >/dev/null
}

# Check number of arguments
if [ $# -lt 1 ]; then
	echo "missing command argument" >&2
	exit 1
fi

# Try to find command
command="$1"

case $command in
	factory_reset|ip_report|fault_light)
		shift
		$command "$@"
	;;
	-h|--help)
		usage
	;;
	*)  # Unknown command
		echo "unknown command '$command'" >&2
		exit 1
	;;
esac
